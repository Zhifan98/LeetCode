//Remove Duplicates from Sorted Array
//Python version
//Note list(dict.fromkeys(???))  ====> remove duplicate
class Solution(object):
    def removeDuplicates(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        s = 0;
        for i in range(len(nums)) :
            if (nums[s] != nums[i]):
                s+=1
                nums[s] = nums[i]
        return len(nums[:s+1])
        
//Java version, the reason we returned the ++j is actually apointer pointed to the address of array nums, ++ makes it move on
class Solution {
    public int removeDuplicates(int[] nums) {
        int j = 0;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] != nums[j]) {
                ++j;
                nums[j] = nums[i];
            }
        }
        return ++j;
    }
}

//C version
int removeDuplicates(int* nums, int numsSize){
    int* p = nums+1;
    int cur = nums[0];
    if (numsSize == 0) return 0;
    if (numsSize == 1) return 1;
    for (int i = 0; i < numsSize; i++) {
       if (nums[i] != cur) {
           cur = nums[i];
           *p = nums[i];
           p++;
       }
    }
    return p-nums;
}
